# Get SFTP credentials from Automation Credential Asset
$Credential = Get-AutomationPSCredential -Name "SftpCredential"
if (-not $Credential) {
    Write-Error "Could not retrieve SFTP credentials from Automation Account."
    exit
}

$SftpHost = "sftp.example.com"
$RemoteHosFolder = "/Hos"
$RemoteBackupFolder = "/Hos/backup"

# Only run Monday-Friday
if ((Get-Date).DayOfWeek -in 'Saturday','Sunday') {
    Write-Output "Script not run: Today is weekend."
    exit
}

# Import Posh-SSH module
Import-Module Posh-SSH

# Create SFTP session
$SFTPSession = New-SFTPSession -ComputerName $SftpHost -Credential $Credential -AcceptKey

# List files in /Hos
$files = Get-SFTPChildItem -SessionId $SFTPSession.SessionId -Path $RemoteHosFolder

# Find hos.csv with today's date
$today = (Get-Date).Date
$hosFile = $files | Where-Object { $_.Name -eq "hos.csv" -and $_.LastWriteTime.Date -eq $today }

if ($hosFile) {
    $timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
    $localTemp = "$env:TEMP\hos.csv"
    $backupFileName = "hos.csv-$timestamp"

    # Download hos.csv
    Get-SFTPFile -SessionId $SFTPSession.SessionId -RemoteFile "$RemoteHosFolder/hos.csv" -LocalPath $localTemp

    # Upload to backup folder with timestamp
    Set-SFTPFile -SessionId $SFTPSession.SessionId -LocalFile $localTemp -RemotePath "$RemoteBackupFolder/$backupFileName"

    Write-Output "hos.csv found and backed up as $backupFileName"
    Remove-Item $localTemp
} else {
    Write-Output "hos.csv not found or not updated today."
}

# Remove SFTP session
Remove-SFTPSession -SessionId $SFTPSession.SessionId